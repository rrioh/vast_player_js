(()=>{"use strict";function e(e){let t=e.match(/(\d{2}):(\d{2}):(\d{2})/);if(!t||t.length<4||NaN===parseInt(t[1])||NaN===parseInt(t[2])||NaN===parseInt(t[3]))throw new Error("convertdurationToSecond error: "+e);return 60*parseInt(t[1])*60+60*parseInt(t[2])+parseFloat(t[3])}function t(e,t){if(!t)return;let r=new Date,n=document.createElement("img");n.src=t.replace(/\[TIMESTAMP\]/,r.toISOString()),n.style.display="none",e.prepend(n),console.log("[DEBUG] beacon sent: "+t)}function r(e,t){if(e)for(let r of e){let e=document.createElement("img");e.src=r.replace(/\[ERRORCODE\]/,t.toString()),e.style.display="none",document.body.prepend(e),console.log("[DEBUG] error beacon sent: "+r)}}var n;!function(e){e[e.XMLParseError=100]="XMLParseError",e[e.VASTSchemaValidationError=101]="VASTSchemaValidationError",e[e.VASTVersionOfResponseNotSupported=102]="VASTVersionOfResponseNotSupported",e[e.NonPlayableAdType=200]="NonPlayableAdType",e[e.MediaPlayerExpectingDifferentLinearity=201]="MediaPlayerExpectingDifferentLinearity",e[e.MediaPlayerExpectingDifferentDuration=202]="MediaPlayerExpectingDifferentDuration",e[e.MediaPlayerExpectingDifferentSize=203]="MediaPlayerExpectingDifferentSize",e[e.AdCategoryNotProvided=204]="AdCategoryNotProvided",e[e.InlineCategoryViolatesWrapperBlockedAdCategories=205]="InlineCategoryViolatesWrapperBlockedAdCategories",e[e.AdNotServed=206]="AdNotServed",e[e.GeneralWrapperError=300]="GeneralWrapperError",e[e.VASTURIUnavailableOrTimeout=301]="VASTURIUnavailableOrTimeout",e[e.WrapperLimitReached=302]="WrapperLimitReached",e[e.NoVASTResponseAfterWrapper=303]="NoVASTResponseAfterWrapper",e[e.AdUnitNotDisplayed=304]="AdUnitNotDisplayed",e[e.GeneralLinearError=400]="GeneralLinearError",e[e.FileNotFound=401]="FileNotFound",e[e.MediaFileURITimeout=402]="MediaFileURITimeout",e[e.SupportedMediaFileNotFound=403]="SupportedMediaFileNotFound",e[e.ProblemDisplayingMediaFile=405]="ProblemDisplayingMediaFile",e[e.MezzanineNotProvided=406]="MezzanineNotProvided",e[e.MezzanineDownloading=407]="MezzanineDownloading",e[e.ConditionalAdRejected=408]="ConditionalAdRejected",e[e.InteractiveUnitNotExecuted=409]="InteractiveUnitNotExecuted",e[e.VerificationUnitNotExecuted=410]="VerificationUnitNotExecuted",e[e.NotRequiredSpecificationOfMezzanine=411]="NotRequiredSpecificationOfMezzanine",e[e.GeneralNonLinearAdsError=500]="GeneralNonLinearAdsError",e[e.NonLinearAdNonDisplayable=501]="NonLinearAdNonDisplayable",e[e.UnableToFetchNonLinearResource=502]="UnableToFetchNonLinearResource",e[e.SupportedNonLinearResourceNotFound=503]="SupportedNonLinearResourceNotFound",e[e.GeneralCompanionAdsError=600]="GeneralCompanionAdsError",e[e.CompanionNonDisplayableByDimemsionError=601]="CompanionNonDisplayableByDimemsionError",e[e.RequiredCompanionNonDisplayable=602]="RequiredCompanionNonDisplayable",e[e.UnableToFetchNonCompanionResource=603]="UnableToFetchNonCompanionResource",e[e.SupportedCompanionResourceNotFound=604]="SupportedCompanionResourceNotFound",e[e.UndefinedError=900]="UndefinedError",e[e.GeneralVPAIDError=901]="GeneralVPAIDError",e[e.GeneralInteractiveCreativeFileError=902]="GeneralInteractiveCreativeFileError"}(n||(n={}));const i=new Map([["start",0],["firstQuartile",1/4],["midpoint",.5],["thirdQuartile",3/4],["complete",1]]),o=new class{errorUrls;constructor(){this.errorUrls=[]}parseVast(e){try{let t=this.parseVastXML(e);return this.createVastObject(t)}catch(e){return console.log("[ERROR] cannot create VASTObject: "+e),null}}parseVastXML(e){let t=(new DOMParser).parseFromString(e,"application/xml"),r=t.querySelector("parsererror");if(r)throw new Error(r.textContent||"parse vast error");let n=t.querySelector("VAST");if(!n)throw new Error("VAST tag not found");return n}createVastObject(t){const i=t.querySelector(":scope>Error");if(!i)throw new Error("cannot parse root Error");i.textContent&&this.errorUrls.push(i.textContent);const o=t.querySelector(":scope>Ad>InLine");if(!o)throw r(this.errorUrls,n.NoVASTResponseAfterWrapper),new Error("parse InLine error");const a=o.querySelector(":scope>Error");if(!a||!a.textContent)throw r(this.errorUrls,n.XMLParseError),new Error("parse InLine Error error");a.textContent&&this.errorUrls.push(a.textContent);const s=o.querySelector(":scope>Impression");if(!s||!s.textContent)throw r(this.errorUrls,n.XMLParseError),new Error("parse InLine Impression error");const l=s.textContent,c=o.querySelector(":scope>AdTitle");if(!c||!c.textContent)throw r(this.errorUrls,n.XMLParseError),new Error("parse InLine AdTitle error");const d=c.textContent,p=o.querySelector(":scope>Creatives>Creative>Linear");if(!p)throw r(this.errorUrls,n.XMLParseError),new Error("parse InLine Linear error");const u=p.querySelector(":scope>Duration");if(!u||!u.textContent)throw r(this.errorUrls,n.XMLParseError),new Error("parse InLine Linear Duration error");const h=e(u.textContent),T=p.querySelectorAll(":scope>TrackingEvents>Tracking"),m=this.createTrackingObject(T,h),g=p.querySelectorAll(":scope>Icons>Icon"),A=this.createIconObject(g),E=p.querySelectorAll(":scope>MediaFiles>MediaFile");if(!E)throw r(this.errorUrls,n.XMLParseError),new Error("parse MediaFiles error");const f=E[0]?.textContent,C=p.querySelector(":scope>VideoClicks>ClickThrough");if(!C||!C.textContent)throw r(this.errorUrls,n.XMLParseError),new Error("parse InLine Linear ClickThrough error");const y=C.textContent;return{errorUrls:this.errorUrls,impressionUrls:[l],adTitle:d,trackings:m,icons:A,mediaFileUrl:f,clickThroughUrl:y}}createTrackingObject(t,r){const n=new Map;return t.forEach((function(t){if(!t.textContent)return;const o=t.getAttribute("event");if(o)if("progress"===o){const r=t.getAttribute("offset");if(!r)return;const i=e(r);n.set(i,t.textContent)}else{const e=i.get(o);null!=e?n.set(e*r,t.textContent):n.set(o,t.textContent)}})),n}createIconObject(t){let r=[];for(let n of t){let t=n,i=parseInt(t.getAttribute("width")||"10")||10,o=parseInt(t.getAttribute("height")||"10")||10,a="0px",s=t.getAttribute("xPosition");s&&(a="left"===s||"right"===s?s:s+"px");let l="0px",c=t.getAttribute("yPosition");c&&(l="top"===c||"bottom"===c?c:c+"px");let d=t.getAttribute("offset"),p=0;d&&(p=e(d));let u=t.getAttribute("duration"),h=null;u&&(h=e(u)+p);const T=t.querySelector(":scope>StaticResource");if(!T||!T.textContent)continue;const m=t.querySelector(":scope>IconClicks>IconClickThrough"),g=t.querySelector(":scope>IconClicks>IconClickTracking");r.push({width:i,height:o,xPosition:a,yPosition:l,start:p,end:h,imgUrl:T.textContent,clickThroughtUrl:m?.textContent??null,clickTrackingUrl:g?.textContent??null})}return r}},a=new class{startPlayer(e){console.log("setPlayer started...");const r=o.parseVast('\n<VAST version="4.2">\n  <Error>\n    <![CDATA[http://test.example/error?code=[ERRORCODE]&clientTime=[TIMESTAMP]]]>\n  </Error>\n  <Ad id="1b330e59-3a62-4000-b9fb-ac9726e98c52" sequence="1">\n    <InLine>\n      <AdSystem version="2.0">nend</AdSystem>\n      <AdTitle><![CDATA[スマートフォンアドネットワーク「nend」]]></AdTitle>\n      <Description><![CDATA[静止画バナーから動画リワード/動画インターステイシャル/動画ネイティブに対応しています]]></Description>\n      <Advertiser><![CDATA[株式会社ファンコミュニケーションズ]]></Advertiser>\n      <Error><![CDATA[https://inline.test.example/error?code=[ERRORCODE]&clientTime=[TIMESTAMP]]]></Error>\n      <Impression id="nend"><![CDATA[https://inline.test.example/impression?clientTime=[TIMESTAMP]]]></Impression>\n      <Creatives>\n        <Creative adId="7245" sequence="1">\n          <Linear>\n            <Duration>00:00:15</Duration>\n            <MediaFiles>\n              <MediaFile delivery="progressive" type="video/mp4" width="1920" height="1080"><![CDATA[https://s3-ap-northeast-1.amazonaws.com/adstir-stage-js/video/AdStir-MOVIE-JP-15.mp4]]></MediaFile>\n            </MediaFiles>\n            <VideoClicks>\n              <ClickThrough><![CDATA[https://mt.united.jp?is=test]]></ClickThrough>\n              <ClickTracking><![CDATA[https://inline.test.example/videoclicktracking?clientTime=[TIMESTAMP]]]></ClickTracking>\n            </VideoClicks>\n            <Icons>\n              <Icon program="nend" width="10" height="10" xPosition="right" yPosition="top" offset="00:00:05" duration="00:00:06">\n                <StaticResource creativeType="image/png"><![CDATA[https://s3-ap-northeast-1.amazonaws.com/adstir-stage-js/optout/i1.png]]></StaticResource>\n                <IconClicks>\n                  <IconClickThrough><![CDATA[https://ja.ad-stir.com/sp/optout.html]]></IconClickThrough>\n                </IconClicks>\n              </Icon>\n            </Icons>\n            <TrackingEvents>\n              <Tracking event="pause"><![CDATA[https://inline.test.example/pause?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="skip"><![CDATA[https://inline.test.example/skip?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="start"><![CDATA[https://inline.test.example/start?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="firstQuartile"><![CDATA[https://inline.test.example/firstQuartile?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="midpoint"><![CDATA[https://inline.test.example/midpoint?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="thirdQuartile"><![CDATA[https://inline.test.example/thirdQuartile?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="complete"><![CDATA[https://inline.test.example/complete?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="complete"><![CDATA[https://inline.test.example/complete2?clientTime=[TIMESTAMP]]]></Tracking>\n            </TrackingEvents>\n          </Linear>\n        </Creative>\n      </Creatives>\n    </InLine>\n  </Ad>\n</VAST>\n');if(!r)return;let n=document.createElement("iframe");n.width="300px",n.height="250px",n.style.border="none",document.getElementById("playerbox")?.appendChild(n);let i=n.contentWindow.document;i.open(),i.write('\n<!DOCTYPE html>\n<html>\n    <head>\n    </head>\n    <body style="margin:0;">\n        <div id="vast_video_container">\n            <div id="vast_video" style="width:300px;height:168.75px;"></div>\n            <div id="progress_bar" style="width:50%;height:2px;background-color:gray;"></div>\n            <div id="ad_title" style="margin:0;width:300px;height:77.25px;background-color:#dcdcdc;"></div>\n        </div>\n    </body>\n</html>\n'),i.close(),i.documentElement.style.overflow="hidden",i.getElementById("ad_title").textContent=r.adTitle;let a=i.getElementById("vast_video"),s=document.createElement("video");s.src=r.mediaFileUrl,s.style.width="100%",s.style.height="100%",s.muted=!0,s.autoplay=!0,s.addEventListener("loadedmetadata",(function(e){let t=i.getElementById("progress_bar"),r=function(){let e=s.currentTime/s.duration*100;t.style.width=e+"%",requestAnimationFrame(r)};requestAnimationFrame(r)})),function(e,r){!function(e,r){for(let n of r)e.addEventListener("canplay",(function(r){t(e,n)}),{once:!0})}(e,r.impressionUrls),function(e,t){e.addEventListener("click",(function(e){open(t,"_blank")}))}(e,r.clickThroughUrl),function(e,r){e.addEventListener("loadedmetadata",(function(n){for(let[n,i]of r.trackings)"pause"===n?e.addEventListener("pause",(function(r){t(e,i)})):"number"==typeof n&&e.addEventListener("timeupdate",(function r(o){e.currentTime>=n&&(t(e,i),e.removeEventListener("timeupdate",r))}))}))}(e,r)}(s,r),function(e,r,n){for(let i of n.icons){let n=document.createElement("img");n.src=i.imgUrl,n.width=i.width,n.height=i.height,n.style.position="fixed","left"===i.xPosition?n.style.left="0px":"right"===i.xPosition?n.style.right="0px":n.style.left=i.xPosition,"top"===i.yPosition?n.style.top="0px":"bottom"===i.yPosition?n.style.bottom="0px":n.style.top=i.yPosition,n.addEventListener("click",(function(r){i.clickTrackingUrl&&t(e,i.clickTrackingUrl),i.clickThroughtUrl&&open(i.clickThroughtUrl,"_blank")})),e.addEventListener("timeupdate",(function t(o){!r.contains(n)&&e.currentTime>=i.start&&r.appendChild(n),i.end&&r.contains(n)&&e.currentTime>=i.end&&(r.removeChild(n),e.removeEventListener("timeupdate",t))}))}}(s,a,r),a.appendChild(s)}};window.vastExecutor=window.vastExecutor||a})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,