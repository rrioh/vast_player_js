(()=>{"use strict";function e(e){let t=e.match(/(\d{2}):(\d{2}):(\d{2})/);if(!t||t.length<4||NaN===parseInt(t[1])||NaN===parseInt(t[2])||NaN===parseInt(t[3]))throw new Error("convertdurationToSecond error: "+e);return 60*parseInt(t[1])*60+60*parseInt(t[2])+parseFloat(t[3])}function t(e,t,n){if(!t)return;new Date;let r=document.createElement("img");n(t,null),r.src=t,r.style.display="none",e.prepend(r),console.log("[DEBUG] beacon sent: "+t)}function n(e,t){if(e)for(let n of e){let e=document.createElement("img");e.src=n.replace(/\[ERRORCODE\]/,t.toString()),e.style.display="none",document.body.prepend(e),console.log("[DEBUG] error beacon sent: "+n)}}var r;!function(e){e[e.XMLParseError=100]="XMLParseError",e[e.VASTSchemaValidationError=101]="VASTSchemaValidationError",e[e.VASTVersionOfResponseNotSupported=102]="VASTVersionOfResponseNotSupported",e[e.NonPlayableAdType=200]="NonPlayableAdType",e[e.MediaPlayerExpectingDifferentLinearity=201]="MediaPlayerExpectingDifferentLinearity",e[e.MediaPlayerExpectingDifferentDuration=202]="MediaPlayerExpectingDifferentDuration",e[e.MediaPlayerExpectingDifferentSize=203]="MediaPlayerExpectingDifferentSize",e[e.AdCategoryNotProvided=204]="AdCategoryNotProvided",e[e.InlineCategoryViolatesWrapperBlockedAdCategories=205]="InlineCategoryViolatesWrapperBlockedAdCategories",e[e.AdNotServed=206]="AdNotServed",e[e.GeneralWrapperError=300]="GeneralWrapperError",e[e.VASTURIUnavailableOrTimeout=301]="VASTURIUnavailableOrTimeout",e[e.WrapperLimitReached=302]="WrapperLimitReached",e[e.NoVASTResponseAfterWrapper=303]="NoVASTResponseAfterWrapper",e[e.AdUnitNotDisplayed=304]="AdUnitNotDisplayed",e[e.GeneralLinearError=400]="GeneralLinearError",e[e.FileNotFound=401]="FileNotFound",e[e.MediaFileURITimeout=402]="MediaFileURITimeout",e[e.SupportedMediaFileNotFound=403]="SupportedMediaFileNotFound",e[e.ProblemDisplayingMediaFile=405]="ProblemDisplayingMediaFile",e[e.MezzanineNotProvided=406]="MezzanineNotProvided",e[e.MezzanineDownloading=407]="MezzanineDownloading",e[e.ConditionalAdRejected=408]="ConditionalAdRejected",e[e.InteractiveUnitNotExecuted=409]="InteractiveUnitNotExecuted",e[e.VerificationUnitNotExecuted=410]="VerificationUnitNotExecuted",e[e.NotRequiredSpecificationOfMezzanine=411]="NotRequiredSpecificationOfMezzanine",e[e.GeneralNonLinearAdsError=500]="GeneralNonLinearAdsError",e[e.NonLinearAdNonDisplayable=501]="NonLinearAdNonDisplayable",e[e.UnableToFetchNonLinearResource=502]="UnableToFetchNonLinearResource",e[e.SupportedNonLinearResourceNotFound=503]="SupportedNonLinearResourceNotFound",e[e.GeneralCompanionAdsError=600]="GeneralCompanionAdsError",e[e.CompanionNonDisplayableByDimemsionError=601]="CompanionNonDisplayableByDimemsionError",e[e.RequiredCompanionNonDisplayable=602]="RequiredCompanionNonDisplayable",e[e.UnableToFetchNonCompanionResource=603]="UnableToFetchNonCompanionResource",e[e.SupportedCompanionResourceNotFound=604]="SupportedCompanionResourceNotFound",e[e.UndefinedError=900]="UndefinedError",e[e.GeneralVPAIDError=901]="GeneralVPAIDError",e[e.GeneralInteractiveCreativeFileError=902]="GeneralInteractiveCreativeFileError"}(r||(r={}));const i=new Map([["start",0],["firstQuartile",1/4],["midpoint",.5],["thirdQuartile",3/4],["complete",1]]),o=new class{errorUrls;constructor(){this.errorUrls=[]}parseVast(e){try{let t=this.parseVastXML(e);return this.createVastObject(t)}catch(e){return console.log("[ERROR] cannot create VASTObject: "+e),null}}parseVastXML(e){let t=(new DOMParser).parseFromString(e,"application/xml"),n=t.querySelector("parsererror");if(n)throw new Error(n.textContent||"parse vast error");let r=t.querySelector("VAST");if(!r)throw new Error("VAST tag not found");return r}createVastObject(t){const i=t.querySelector(":scope>Error");i&&i.textContent&&this.errorUrls.push(i.textContent);const o=t.querySelector(":scope>Ad>InLine");if(!o)throw n(this.errorUrls,r.NoVASTResponseAfterWrapper),new Error("parse InLine error");const a=o.querySelector(":scope>Error");a&&a.textContent&&this.errorUrls.push(a.textContent);const s=o.querySelector(":scope>Impression");if(!s||!s.textContent)throw n(this.errorUrls,r.XMLParseError),new Error("parse InLine Impression error");const c=s.textContent,l=o.querySelector(":scope>AdTitle");if(!l||!l.textContent)throw n(this.errorUrls,r.XMLParseError),new Error("parse InLine AdTitle error");const d=l.textContent;let p=null;const u=o.querySelector(":scope>Description");u&&u.textContent&&(p=u.textContent);const h=o.querySelector(":scope>Creatives>Creative>Linear");if(!h)throw n(this.errorUrls,r.XMLParseError),new Error("parse InLine Linear error");const m=h.querySelector(":scope>Duration");if(!m||!m.textContent)throw n(this.errorUrls,r.XMLParseError),new Error("parse InLine Linear Duration error");const T=e(m.textContent),g=h.querySelectorAll(":scope>TrackingEvents>Tracking"),f=this.createTrackingObject(g,T),A=h.querySelectorAll(":scope>Icons>Icon"),E=this.createIconObject(A),C=h.querySelectorAll(":scope>MediaFiles>MediaFile");if(!C)throw n(this.errorUrls,r.XMLParseError),new Error("parse MediaFiles error");const y=C[0]?.textContent,v=h.querySelector(":scope>VideoClicks");let x=null,k=[];if(v){const e=v.querySelector(":scope>ClickThrough");if(!e||!e.textContent)throw n(this.errorUrls,r.XMLParseError),new Error("parse InLine Linear ClickThrough error");x=e.textContent;const t=v.querySelectorAll(":scope>ClickTracking");for(let e of t)e.textContent&&k.push(e.textContent)}return{errorUrls:this.errorUrls,impressionUrls:[c],adTitle:d,adDesc:p,trackings:f,icons:E,mediaFileUrl:y,clickThroughUrl:x,clickTrackingUrls:k}}createTrackingObject(t,n){const r=new Map;return t.forEach((function(t){if(!t.textContent)return;const o=t.getAttribute("event");if(o)if("progress"===o){const n=t.getAttribute("offset");if(!n)return;const i=e(n);r.set(i,t.textContent)}else{const e=i.get(o);null!=e?r.set(e*n,t.textContent):r.set(o,t.textContent)}})),r}createIconObject(t){let n=[];for(let r of t){let t=r,i=parseInt(t.getAttribute("width")||"10")||10,o=parseInt(t.getAttribute("height")||"10")||10,a="0px",s=t.getAttribute("xPosition");s&&(a="left"===s||"right"===s?s:s+"px");let c="0px",l=t.getAttribute("yPosition");l&&(c="top"===l||"bottom"===l?l:l+"px");let d=t.getAttribute("offset"),p=0;d&&(p=e(d));let u=t.getAttribute("duration"),h=null;u&&(h=e(u)+p);const m=t.querySelector(":scope>StaticResource");if(!m||!m.textContent)continue;const T=t.querySelector(":scope>IconClicks>IconClickThrough"),g=t.querySelector(":scope>IconClicks>IconClickTracking");n.push({width:i,height:o,xPosition:a,yPosition:c,start:p,end:h,imgUrl:m.textContent,clickThroughUrl:T?.textContent??null,clickTrackingUrl:g?.textContent??null})}return n}},a=new class{startPlayer(e){console.log("setPlayer started...");const n=o.parseVast('\n<VAST version="4.2">\n  <Error>\n    <![CDATA[http://test.example/error?code=[ERRORCODE]&clientTime=[TIMESTAMP]]]>\n  </Error>\n  <Ad id="1b330e59-3a62-4000-b9fb-ac9726e98c52" sequence="1">\n    <InLine>\n      <AdSystem version="2.0">nend</AdSystem>\n      <AdTitle><![CDATA[スマートフォンアドネットワーク「nend」]]></AdTitle>\n      <Description><![CDATA[静止画バナーから動画リワード/動画インターステイシャル/動画ネイティブに対応しています]]></Description>\n      <Advertiser><![CDATA[株式会社ファンコミュニケーションズ]]></Advertiser>\n      <Error><![CDATA[https://inline.test.example/error?code=[ERRORCODE]&clientTime=[TIMESTAMP]]]></Error>\n      <Impression id="nend"><![CDATA[https://inline.test.example/impression?clientTime=[TIMESTAMP]]]></Impression>\n      <Creatives>\n        <Creative adId="7245" sequence="1">\n          <Linear>\n            <Duration>00:00:15</Duration>\n            <MediaFiles>\n              <MediaFile delivery="progressive" type="video/mp4" width="1920" height="1080"><![CDATA[https://static-image-hmr.s3.ap-northeast-1.amazonaws.com/exmo.mp4]]></MediaFile>\n            </MediaFiles>\n            <VideoClicks>\n              <ClickThrough><![CDATA[https://mt.united.jp?is=test]]></ClickThrough>\n              <ClickTracking><![CDATA[https://inline.test.example/videoclicktracking?clientTime=[TIMESTAMP]]]></ClickTracking>\n            </VideoClicks>\n            <Icons>\n              <Icon program="nend" width="10" height="10" xPosition="right" yPosition="top" offset="00:00:05" duration="00:00:06">\n                <StaticResource creativeType="image/png"><![CDATA[https://static-image-hmr.s3.ap-northeast-1.amazonaws.com/i.png]]></StaticResource>\n                <IconClicks>\n                  <IconClickThrough><![CDATA[https://ja.ad-stir.com/sp/optout.html]]></IconClickThrough>\n                </IconClicks>\n              </Icon>\n            </Icons>\n            <TrackingEvents>\n              <Tracking event="pause"><![CDATA[https://inline.test.example/pause?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="skip"><![CDATA[https://inline.test.example/skip?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="start"><![CDATA[https://inline.test.example/start?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="firstQuartile"><![CDATA[https://inline.test.example/firstQuartile?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="midpoint"><![CDATA[https://inline.test.example/midpoint?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="thirdQuartile"><![CDATA[https://inline.test.example/thirdQuartile?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="complete"><![CDATA[https://inline.test.example/complete?clientTime=[TIMESTAMP]]]></Tracking>\n              <Tracking event="complete"><![CDATA[https://inline.test.example/complete2?clientTime=[TIMESTAMP]]]></Tracking>\n            </TrackingEvents>\n          </Linear>\n        </Creative>\n      </Creatives>\n    </InLine>\n  </Ad>\n</VAST>\n');if(!n)return;let r=document.createElement("iframe");r.width="300px",r.height="250px",r.style.border="none",document.getElementById("playerbox")?.appendChild(r);let i=r.contentWindow.document;i.open(),i.write('\n<!DOCTYPE html>\n<html>\n    <head>\n    </head>\n    <body style="margin:0;">\n        <div id="vast_video_container">\n            <div id="vast_video" style="width:300px;height:168.75px;"></div>\n            <div id="progress_bar" style="width:50%;height:3px;background-color:gray;"></div>\n            <div id="ad_text" style="margin:0;width:300px;height:78.25px;background-color:#dcdcdc;">\n                <div id="ad_title" style="font-size:15px;font-weight:bold;"></div>\n                <div id="ad_desc" style="font-size:10px;"></div>\n            </div>\n        </div>\n    </body>\n</html>\n'),i.close(),i.documentElement.style.overflow="hidden",i.getElementById("ad_title").textContent=n.adTitle;let a=i.getElementById("ad_desc");n.adDesc&&(a.textContent=n.adDesc);let s=i.getElementById("vast_video"),c=document.createElement("video");c.src=n.mediaFileUrl,c.style.width="100%",c.style.height="100%",c.muted=!0,c.autoplay=!0,c.addEventListener("loadedmetadata",(function(e){let t=i.getElementById("progress_bar"),n=function(){let e=c.currentTime/c.duration*100;t.style.width=e+"%",requestAnimationFrame(n)};requestAnimationFrame(n)}));const l=function(e){let t=new Map,n=new Date;t.set("[TIMESTAMP]",n.toISOString());const r={ratio:0};return new IntersectionObserver((function(e){e.forEach((function(e){const t=Math.floor(100*e.intersectionRatio)/100;r.ratio=t}))}),{rootMargin:"0px",threshold:[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1]}).observe(e),t.set("[INVIEW_RATIO]",function(e){return()=>e.ratio.toFixed(2)}(r)),(e,n)=>{n&&t.set("[ERRORCODE]",n.toString()),t.forEach(((t,n)=>{e=e.replace(n,"function"==typeof t?t():t)}))}}(s);(function(e,n,r){!function(e,n,r){for(let i of n)e.addEventListener("canplay",(function(n){t(e,i,r)}),{once:!0})}(e,n.impressionUrls,r),function(e,t){t&&e.addEventListener("click",(function(e){open(t,"_blank")}))}(e,n.clickThroughUrl),function(e,n,r){for(let i of n)e.addEventListener("click",(function(n){t(e,i,r)}))}(e,n.clickTrackingUrls,r),function(e,n,r){e.addEventListener("loadedmetadata",(function(i){for(let[i,o]of n.trackings)"loaded"==i?e.addEventListener("canplay",(function(n){t(e,o,r)}),{once:!0}):"pause"===i?e.addEventListener("pause",(function(n){t(e,o,r)})):"number"==typeof i&&e.addEventListener("timeupdate",(function n(a){e.currentTime>=i&&(t(e,o,r),e.removeEventListener("timeupdate",n))}))}))}(e,n,r)})(c,n,l),function(e,n,r,i){for(let o of r.icons){let r=document.createElement("img");r.src=o.imgUrl,r.width=o.width,r.height=o.height,r.style.position="fixed","left"===o.xPosition?r.style.left="0px":"right"===o.xPosition?r.style.right="0px":r.style.left=o.xPosition,"top"===o.yPosition?r.style.top="0px":"bottom"===o.yPosition?r.style.bottom="0px":r.style.top=o.yPosition,r.addEventListener("click",(function(n){o.clickTrackingUrl&&t(e,o.clickTrackingUrl,i),o.clickThroughUrl&&open(o.clickThroughUrl,"_blank")})),e.addEventListener("timeupdate",(function t(i){!n.contains(r)&&e.currentTime>=o.start&&n.appendChild(r),o.end&&n.contains(r)&&e.currentTime>=o.end&&(n.removeChild(r),e.removeEventListener("timeupdate",t))})),o.end||e.addEventListener("ended",(function(e){n.contains(r)&&n.removeChild(r)}))}}(c,s,n,l),new IntersectionObserver((function(e){e.forEach((function(e){e.isIntersecting?c.play():c.pause()}))}),{rootMargin:"0px",threshold:.5}).observe(c),s.appendChild(c)}};window.vastExecutor=window.vastExecutor||a})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,